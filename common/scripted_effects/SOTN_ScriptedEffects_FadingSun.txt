#
# POLITICAL UNREST EFFECTS
#

# Effect to get the total number of states susceptible to unrest modifiers
SOTN_Unrest_GetNumberOfPossibleStates_effect = {
	set_variable = {
		SOTN_OwnedStates_var = 0
	}
	hidden_effect = {
		every_owned_state = {
			limit = {
				impassable = no
			}
			owner = {
				add_to_variable = {
					SOTN_OwnedStates_var = 1
				}
			}
		}
	}
}

#Effect to sum up the total unrest in the country
SOTN_Unrest_GetTotalSum_effect = {
	set_variable = {
		SOTN_TotalUnrest_var = 0
	}
	hidden_effect = {
		every_owned_state = {
			limit = {
				impassable = no
				has_dynamic_modifier = {
					modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
				}
			}
			owner = {
				add_to_variable = {
					SOTN_TotalUnrest_var = PREV.SOTN_StateUnrest_var
				}
			}
		}
	}
}

#Effect to get the mean total unrest in the country
SOTN_Unrest_GetAverage_effect = {
	SOTN_Unrest_GetNumberOfPossibleStates_effect = yes
	SOTN_Unrest_GetTotalSum_effect = yes
	set_variable = {
		SOTN_Unrest_Average_var = 0
	}
	add_to_variable = {
		SOTN_Unrest_Average_var = SOTN_TotalUnrest_var
	}
	divide_variable = {
		SOTN_Unrest_Average_var = SOTN_OwnedStates_var
	}
	set_variable = {
		SOTN_Unrest_DoubleAverage_var = SOTN_Unrest_Average_var
	}
	multiply_variable = {
		SOTN_Unrest_DoubleAverage_var = 2
	}
	log = "[GetDateText] SOTN: Recalculating average unrest out of [?ROOT.SOTN_OwnedStates_var] possible states: [?ROOT.SOTN_Unrest_Average_var]"
}

#Effect to get the impact of the average unrest on the country, as variables
SOTN_Unrest_GetImpact_effect = {
	set_variable = {
		SOTN_UnrestImpact_var = SOTN_Unrest_Average_var
	}
	divide_variable = {
		SOTN_UnrestImpact_var = -100
	}
	set_variable = {
		SOTN_UnrestImpactSmall_var = SOTN_UnrestImpact_var
	}
	divide_variable = {
		SOTN_UnrestImpactSmall_var = 2
	}
}

#Effect to handle state control change for unrest modifiers
SOTN_Unrest_onStateOwnershipChange_effect = {
	if = {
		limit = {
			ROOT = {
				has_idea = SOTN_PoliticalUnrest
			}
			FROM.FROM = {
				NOT = {
					has_dynamic_modifier = {
						modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
					}
				}
				NOT = {
					has_state_flag = SOTN_Unrest_PacifiedState_flag
				}
				check_variable = {
					SOTN_StateUnrest_var = 1
					compare = greater_than_or_equals
				}
				impassable = no
			}
		}
		FROM.FROM = {	
			log = "[GetDateText] SOTN: Re-enabling unrest modifier in [THIS.GetName], with an unrest value of [?THIS.SOTN_StateUnrest_var]."
			add_dynamic_modifier = {
				modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
			}
		}
	}
	else_if = {
		limit = {
			NOT = {
				has_idea = SOTN_PoliticalUnrest
			}
			FROM.FROM = {
				has_dynamic_modifier = {
					modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
				}
				impassable = no
			}
		}
		FROM.FROM = {
			log = "[GetDateText] SOTN: Removing unrest modifier from [THIS.GetName]"
			remove_dynamic_modifier = {
				modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
			}
		}
	}
}


# Effects to add unrest to a state (increments are 2, 5 and 10)
# Needs to be nested within a state for it to work

SOTN_IncreaseStateUnrest_small_effect = { #Small unrest increase (2)
	log = "[GetDateText] SOTN: Increasing unrest in [THIS.GetName] by 10."
	custom_effect_tooltip = SOTN_IncreaseStateUnrest_small_tt
	hidden_effect = {
		if = {
			limit = {
				NOT = {
					has_dynamic_modifier = {
						modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
					}
				}
			}
			add_dynamic_modifier = {
				modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
			}
		}
	}
	add_to_variable = {
		SOTN_StateUnrest_var = 2
	}
	clamp_variable = {
		var = SOTN_StateUnrest_var
		min = 1 #Unrest should always remain present
		max = 100 #Unrest should never get over 100
	}
	add_to_variable = { #Add to new variable, extract it, multiply it by -200 to get the proper value for the modifier
		SOTN_StateUnrestImpact_var = SOTN_StateUnrest_var
	}
	divide_variable = {
		SOTN_StateUnrestImpact_var = -100
	}
	owner = { #Recalculate the Average unrest and dependent variable for the country itself
		SOTN_Unrest_GetAverage_effect = yes
		SOTN_Unrest_GetImpact_effect = yes
	}
}


SOTN_IncreaseStateUnrest_medium_effect = { #Medium unrest increase (5)
	log = "[GetDateText] SOTN: Increasing unrest in [THIS.GetName] by 10."
	custom_effect_tooltip = SOTN_IncreaseStateUnrest_medium_tt
	hidden_effect = {
		if = {
			limit = {
				NOT = {
					has_dynamic_modifier = {
						modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
					}
				}
			}
			add_dynamic_modifier = {
				modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
			}
		}
	}
	add_to_variable = {
		SOTN_StateUnrest_var = 5
	}
	clamp_variable = {
		var = SOTN_StateUnrest_var
		min = 1 #Unrest should always remain present
		max = 100 #Unrest should never get over 100
	}
	add_to_variable = { #Add to new variable, extract it, multiply it by -200 to get the proper value for the modifier
		SOTN_StateUnrestImpact_var = SOTN_StateUnrest_var
	}
	divide_variable = {
		SOTN_StateUnrestImpact_var = -100
	}
	owner = { #Recalculate the Average unrest and dependent variable for the country itself
		SOTN_Unrest_GetAverage_effect = yes
		SOTN_Unrest_GetImpact_effect = yes
	}
}

SOTN_IncreaseStateUnrest_large_effect = { #Large unrest increase (10)
	log = "[GetDateText] SOTN: Increasing unrest in [THIS.GetName] by 10."
	custom_effect_tooltip = SOTN_IncreaseStateUnrest_large_tt
	hidden_effect = {
		if = {
			limit = {
				NOT = {
					has_dynamic_modifier = {
						modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
					}
				}
			}
			add_dynamic_modifier = {
				modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
			}
		}
	}
	add_to_variable = {
		SOTN_StateUnrest_var = 10
	}
	clamp_variable = {
		var = SOTN_StateUnrest_var
		min = 1 #Unrest should always remain present
		max = 100 #Unrest should never get over 100
	}
	add_to_variable = { #Add to new variable, extract it, multiply it by -200 to get the proper value for the modifier
		SOTN_StateUnrestImpact_var = SOTN_StateUnrest_var
	}
	divide_variable = {
		SOTN_StateUnrestImpact_var = -100
	}
	owner = { #Recalculate the Average unrest and dependent variable for the country itself
		SOTN_Unrest_GetAverage_effect = yes
		SOTN_Unrest_GetImpact_effect = yes
	}
}

# Effects to lower unrest to a state (increments are -2, -5 and -10)
# Needs to be nested within a state for it to work

SOTN_DecreaseStateUnrest_small_effect = { #Small unrest decrease (-2)
	log = "[GetDateText] SOTN: Decreasing unrest in [THIS.GetName] by -2."
	custom_effect_tooltip = SOTN_DecreaseStateUnrest_small_tt
	hidden_effect = {
		if = {
			limit = {
				NOT = {
					has_dynamic_modifier = {
						modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
					}
				}
			}
			add_dynamic_modifier = {
				modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
			}
		}
	}
	add_to_variable = {
		SOTN_StateUnrest_var = -2
	}
	clamp_variable = {
		var = SOTN_StateUnrest_var
		min = 1 #Unrest should always remain present
		max = 100 #Unrest should never get over 100
	}
	add_to_variable = { #Add to new variable, extract it, multiply it by -200 to get the proper value for the modifier
		SOTN_StateUnrestImpact_var = SOTN_StateUnrest_var
	}
	divide_variable = {
		SOTN_StateUnrestImpact_var = -100
	}
	owner = { #Recalculate the Average unrest and dependent variable for the country itself
		SOTN_Unrest_GetAverage_effect = yes
		SOTN_Unrest_GetImpact_effect = yes
	}
}


SOTN_DecreaseStateUnrest_medium_effect = { #Medium unrest decrease (-5)
	log = "[GetDateText] SOTN: Decreasing unrest in [THIS.GetName] by -5."
	custom_effect_tooltip = SOTN_DecreaseStateUnrest_medium_tt
	hidden_effect = {
		if = {
			limit = {
				NOT = {
					has_dynamic_modifier = {
						modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
					}
				}
			}
			add_dynamic_modifier = {
				modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
			}
		}
	}
	add_to_variable = {
		SOTN_StateUnrest_var = -5
	}
	clamp_variable = {
		var = SOTN_StateUnrest_var
		min = 1 #Unrest should always remain present
		max = 100 #Unrest should never get over 100
	}
	add_to_variable = { #Add to new variable, extract it, multiply it by -200 to get the proper value for the modifier
		SOTN_StateUnrestImpact_var = SOTN_StateUnrest_var
	}
	divide_variable = {
		SOTN_StateUnrestImpact_var = -100
	}
	owner = { #Recalculate the Average unrest and dependent variable for the country itself
		SOTN_Unrest_GetAverage_effect = yes
		SOTN_Unrest_GetImpact_effect = yes
	}
}

SOTN_DecreaseStateUnrest_large_effect = { #Large unrest decrease (-10)
	log = "[GetDateText] SOTN: Decreasing unrest in [THIS.GetName] by -10."
	custom_effect_tooltip = SOTN_DecreaseStateUnrest_large_tt
	hidden_effect = {
		if = {
			limit = {
				NOT = {
					has_dynamic_modifier = {
						modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
					}
				}
			}
			add_dynamic_modifier = {
				modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
			}
		}
	}
	add_to_variable = {
		SOTN_StateUnrest_var = -10
	}
	clamp_variable = {
		var = SOTN_StateUnrest_var
		min = 1 #Unrest should always remain present
		max = 100 #Unrest should never get over 100
	}
	add_to_variable = { #Add to new variable, extract it, multiply it by -200 to get the proper value for the modifier
		SOTN_StateUnrestImpact_var = SOTN_StateUnrest_var
	}
	divide_variable = {
		SOTN_StateUnrestImpact_var = -100
	}
	owner = { #Recalculate the Average unrest and dependent variable for the country itself
		SOTN_Unrest_GetAverage_effect = yes
		SOTN_Unrest_GetImpact_effect = yes
	}
}

#Master effect to enable and setup the urnest mechanics - not all states start with unrest
SOTN_UnrestStartup_effect = {
	740 = {
		log = "[GetDateText] SOTN: Enabling unrest in setup for the state of [THIS.GetName]."
		add_dynamic_modifier = {
			modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
		}
		set_variable = {
			SOTN_StateUnrest_var = 20
		}
		set_variable = {
			SOTN_StateUnrestImpact_var = -0.2
		}
	}
	738 = {
		log = "[GetDateText] SOTN: Enabling unrest in setup for the state of [THIS.GetName]."
		add_dynamic_modifier = {
			modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
		}
		set_variable = {
			SOTN_StateUnrest_var = 20
		}
		set_variable = {
			SOTN_StateUnrestImpact_var = -0.2
		}
	}
	735 = {
		log = "[GetDateText] SOTN: Enabling unrest in setup for the state of [THIS.GetName]."
		add_dynamic_modifier = {
			modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
		}
		set_variable = {
			SOTN_StateUnrest_var = 15
		}
		set_variable = {
			SOTN_StateUnrestImpact_var = -0.15
		}
	}
	758 = {
		log = "[GetDateText] SOTN: Enabling unrest in setup for the state of [THIS.GetName]."
		add_dynamic_modifier = {
			modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
		}
		set_variable = {
			SOTN_StateUnrest_var = 10
		}
		set_variable = {
			SOTN_StateUnrestImpact_var = -0.1
		}
	}
	759 = {
		log = "[GetDateText] SOTN: Enabling unrest in setup for the state of [THIS.GetName]."
		add_dynamic_modifier = {
			modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
		}
		set_variable = {
			SOTN_StateUnrest_var = 10
		}
		set_variable = {
			SOTN_StateUnrestImpact_var = -0.1
		}
	}
	760 = {
		log = "[GetDateText] SOTN: Enabling unrest in setup for the state of [THIS.GetName]."
		add_dynamic_modifier = {
			modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
		}
		set_variable = {
			SOTN_StateUnrest_var = 15
		}
		set_variable = {
			SOTN_StateUnrestImpact_var = -0.15
		}
	}
	761 = {
		log = "[GetDateText] SOTN: Enabling unrest in setup for the state of [THIS.GetName]."
		add_dynamic_modifier = {
			modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
		}
		set_variable = {
			SOTN_StateUnrest_var = 15
		}
		set_variable = {
			SOTN_StateUnrestImpact_var = -0.15
		}
	}
	763 = {
		log = "[GetDateText] SOTN: Enabling unrest in setup for the state of [THIS.GetName]."
		add_dynamic_modifier = {
			modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
		}
		set_variable = {
			SOTN_StateUnrest_var = 10
		}
		set_variable = {
			SOTN_StateUnrestImpact_var = -0.1
		}
	}
	766 = {
		log = "[GetDateText] SOTN: Enabling unrest in setup for the state of [THIS.GetName]."
		add_dynamic_modifier = {
			modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
		}
		set_variable = {
			SOTN_StateUnrest_var = 10
		}
		set_variable = {
			SOTN_StateUnrestImpact_var = -0.1
		}
	}
	770 = {
		log = "[GetDateText] SOTN: Enabling unrest in setup for the state of [THIS.GetName]."
		add_dynamic_modifier = {
			modifier = SOTN_MODIFIER_LocalUnrest_Dynmod
		}
		set_variable = {
			SOTN_StateUnrest_var = 15
		}
		set_variable = {
			SOTN_StateUnrestImpact_var = -0.15
		}
	}
	SOTN_Unrest_GetAverage_effect = yes
	SOTN_Unrest_GetImpact_effect = yes
	add_dynamic_modifier = {
		modifier = SOTN_PoliticalUnrest_Dynmod
	}
	activate_mission = SOTN_LoomingFamine
}
